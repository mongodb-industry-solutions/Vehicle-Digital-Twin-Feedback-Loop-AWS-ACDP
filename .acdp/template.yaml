apiVersion: scaffolder.backstage.io/v1beta3
# Q - do we need to updated the apiVersion?
kind: Template
metadata:
  description: A CDK app for Connected Vehicle (Digital Twin) Solution using MongoDB Atlas and Amazon SageMaker
  name: cms-mongodb-connected-vehicle
  tags:
  - cms
  - mongodb
  - atlas
  - connectedvehicle
  title: MongoDB Vehicle Digital Twin
  annotations:
    backstage.io/techdocs-ref: dir:../docs/components/cms-mongodb-connected-vehicle/
  # Q - do we need to update annotations?
spec:
  type: service
  output:
    links:
    - entityRef: ${{ steps.catalogRegister.output.entityRef }}
      icon: catalog
      title: Open in catalog
  # Q - do we need to update the icon and title values 
  owner: mongodb
  
  parameters:
  - properties:
      componentId:
        default: cms-mongodb-connected-vehicle
        description: A vehicle digtial twin solution using MongoDB and Amazon SageMaker
        # description to be clarified
        pattern: '[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z]'
        title: Title
        type: string
        ui:field: EntityNamePicker
      description:
        default:  A CDK app for Connected Vehicle (Digital Twin) Solution using MongoDB Atlas and Amazon SageMaker.
        description: This is a digital twin solution for connected vehicles developed using AWS CDK and Atlas Appservices to perform analysis on telemetry data
        title: Description
        type: string
      owner:
        description: MongoDB
        title: Owner
        type: string
        ui:field: OwnerPicker
        ui:options:
          catalogFilter:
            kind:
            - Group
            - User
    required:
    - componentId
    - owner
    title: MongoDB Vehicle Digital Twin
    
# Need to understand how to populate properties --> appUniqueID and userEmail
  - properties:
      appUniqueId:
        default: cms
        description: Application unique identifier used to uniquely name resources within the stack
        title: App Unique ID
        type: string
        ui:disabled: true
    required:
    - appUniqueId
    title: Provide the Module Configuration
  steps:
  - action: aws:acdp:catalog:create
    id: acdpCatalogCreate
    name: ACDP S3 Catalog Create
    input:
      componentId: ${{ parameters.componentId }}
 # need to confirm if we have added these paths correctly
      assetsSourcePath: dir:../
      docsSiteSourcePath: dir:../docs/components/cms-mongodb-connected-vehicle/site/
      entity:
        apiVersion: backstage.io/v1alpha1
        kind: Component
        metadata:
          annotations:
            aws.amazon.com/acdp-deploy-on-create: "true"
            backstage.io/techdocs-ref: dir:.
            backstage.io/source-location: https://github.com/aws-sansalex/Vehicle-Digital-Twin-Feedback-Loop-AWS-ACDP.git
          description: ${{parameters.description}}
          name: ${{parameters.componentId}}
          namespace: acdp
        spec:
          lifecycle: experimental
          owner: ${{parameters.owner}}
          type: service

  - action: catalog:register
    id: catalogRegister
    name: Backstage Catalog Register
    input:
      catalogInfoUrl: ${{ steps.acdpCatalogCreate.output.catalogItemS3Url }}

  - action: aws:acdp:configure
    id: acdpConfigureDeploy
    name: ACDP Configure Deploy
    input:
      entityRef: ${{ steps.catalogRegister.output.entityRef }}
      buildParameters:
      - name: APP_UNIQUE_ID
        value: ${{ parameters.appUniqueId }}
